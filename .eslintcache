[{"C:\\Users\\Florian\\Desktop\\github\\homepage\\src\\index.tsx":"1","C:\\Users\\Florian\\Desktop\\github\\homepage\\src\\reportWebVitals.ts":"2","C:\\Users\\Florian\\Desktop\\github\\homepage\\src\\store\\store.tsx":"3","C:\\Users\\Florian\\Desktop\\github\\homepage\\src\\store\\actionTypes\\actionTypes.tsx":"4","C:\\Users\\Florian\\Desktop\\github\\homepage\\src\\app.tsx":"5","C:\\Users\\Florian\\Desktop\\github\\homepage\\src\\domain\\project\\project.tsx":"6","C:\\Users\\Florian\\Desktop\\github\\homepage\\src\\domain\\home\\home.tsx":"7","C:\\Users\\Florian\\Desktop\\github\\homepage\\src\\domain\\project\\project-list.tsx":"8","C:\\Users\\Florian\\Desktop\\github\\homepage\\src\\store\\actions\\index.tsx":"9","C:\\Users\\Florian\\Desktop\\github\\homepage\\src\\domain\\home\\counter\\counter.tsx":"10","C:\\Users\\Florian\\Desktop\\github\\homepage\\src\\domain\\home\\store\\reducers\\counterReducer.tsx":"11","C:\\Users\\Florian\\Desktop\\github\\homepage\\src\\domain\\home\\store\\actionTypes\\actionTypes.tsx":"12","C:\\Users\\Florian\\Desktop\\github\\homepage\\src\\domain\\home\\store\\actions\\index.tsx":"13"},{"size":1248,"mtime":1608691656169,"results":"14","hashOfConfig":"15"},{"size":467,"mtime":1608056133408,"results":"16","hashOfConfig":"15"},{"size":571,"mtime":1608730804202,"results":"17","hashOfConfig":"15"},{"size":76,"mtime":1608730693335,"results":"18","hashOfConfig":"15"},{"size":807,"mtime":1608690713804,"results":"19","hashOfConfig":"15"},{"size":121,"mtime":1608083427977,"results":"20","hashOfConfig":"15"},{"size":245,"mtime":1608731218101,"results":"21","hashOfConfig":"15"},{"size":132,"mtime":1608068667295,"results":"22","hashOfConfig":"15"},{"size":43,"mtime":1608730716628,"results":"23","hashOfConfig":"15"},{"size":799,"mtime":1608731198256,"results":"24","hashOfConfig":"15"},{"size":683,"mtime":1608730840230,"results":"25","hashOfConfig":"15"},{"size":225,"mtime":1608730567997,"results":"26","hashOfConfig":"15"},{"size":2308,"mtime":1608731120374,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1u5zbc1",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},"C:\\Users\\Florian\\Desktop\\github\\homepage\\src\\index.tsx",[],[],"C:\\Users\\Florian\\Desktop\\github\\homepage\\src\\reportWebVitals.ts",["60"],"import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","C:\\Users\\Florian\\Desktop\\github\\homepage\\src\\store\\store.tsx",[],"C:\\Users\\Florian\\Desktop\\github\\homepage\\src\\store\\actionTypes\\actionTypes.tsx",[],[],"C:\\Users\\Florian\\Desktop\\github\\homepage\\src\\app.tsx",[],"C:\\Users\\Florian\\Desktop\\github\\homepage\\src\\domain\\project\\project.tsx",[],"C:\\Users\\Florian\\Desktop\\github\\homepage\\src\\domain\\home\\home.tsx",[],"C:\\Users\\Florian\\Desktop\\github\\homepage\\src\\domain\\project\\project-list.tsx",[],"C:\\Users\\Florian\\Desktop\\github\\homepage\\src\\store\\actions\\index.tsx",[],[],"C:\\Users\\Florian\\Desktop\\github\\homepage\\src\\domain\\home\\counter\\counter.tsx",["61","62","63"],"import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../../store/store';\nimport Button from 'react-bootstrap/Button';\nimport './counter.scss';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { CounterState } from '../store/reducers/counterReducer';\nimport { incrementAsync } from '../store/actions';\n\nexport interface Props {}\n\nconst Counter: React.FC<Props> = (props: Props) => {\n    const state: CounterState = useSelector((state: RootState) => state.CounterState);\n    const dispatch = useDispatch();\n\n    return (\n        <div className=\"counter\">\n            <h1>Counter: {state.Counter}</h1>\n            <Button onClick={() => dispatch(incrementAsync())}>+</Button>\n        </div>\n    );\n};\n\nexport default Counter;\n","C:\\Users\\Florian\\Desktop\\github\\homepage\\src\\domain\\home\\store\\reducers\\counterReducer.tsx",[],"C:\\Users\\Florian\\Desktop\\github\\homepage\\src\\domain\\home\\store\\actionTypes\\actionTypes.tsx",[],"C:\\Users\\Florian\\Desktop\\github\\homepage\\src\\domain\\home\\store\\actions\\index.tsx",["64"],"import * as constants from '../actionTypes/actionTypes';\nimport { ThunkAction } from 'redux-thunk';\nimport { RootState } from '../../../../store/store';\n\ninterface IncrementCounter_Action {\n    type: constants.INCREMENT_COUNTER;\n    payload?: number;\n}\ninterface DecrementCounter_Action {\n    type: constants.DECREMENT_COUNTER;\n    payload?: number;\n}\n\nexport type Actions = IncrementCounter_Action | DecrementCounter_Action;\n\n// without thunk, used by thunk\n// returns only 1 object\n// with this you can call in view (if you dont want to use thunk):\n// function onIncrementCounter(): Actions {\n//     return dispatch(increment());\n// }\n//\n// directly call actions\n// dont use action-creators (redux thunk)\n// synchronously\n// in onClick: incrementAsync\n\nexport function increment(): Actions {\n    return {\n        type: constants.INCREMENT_COUNTER,\n    };\n}\n\n// redux-Thunk action-creator\n// so it returns no action (aka single object) but a function which returns this action (object)\n// \"Redux Thunk middleware allows you to write action creators that return a function instead of an action.\"\n// in onClick: () => dispatch(incrementAsync())\n// how does thunk now if it being used or not (maybe used dispatch directly...)\n//  - similar question: What is the main difference to \"non-thunk\"\n//  - = example without thunk:  handleIncrementClick: () => dispatch({ type: 'INCREMENT' })\n//  -   example with thunk:     handleIncrementClick: () => dispatch(innerDispatch => innerDispatch({ type: 'INCREMENT' }))\n//      - main-difference: dispatch does not get/return a plain object but a function\nexport function incrementAsync(): ThunkResult<void> {\n    // https://stackoverflow.com/questions/52977666/correct-typescript-type-for-thunk-dispatch\n    return async (dispatch, getState) => {\n        // const state = getState();\n        // console.log(state.CounterState.Counter);\n        // example async call: axios.get(`https://reqres.in/api/users`)\n        //\n        // dispatch(addTodoStarted());\n        setTimeout(() => {\n            dispatch(increment());\n        }, 0);\n        // .then(res=> {dispatch(addTodoSuccess)})\n    };\n}\n\nexport function decrement(): Actions {\n    return {\n        type: constants.DECREMENT_COUNTER,\n    };\n}\n\ntype ThunkResult<R> = ThunkAction<R, RootState, undefined, Actions>;\n",{"ruleId":"65","severity":1,"message":"66","line":3,"column":25,"nodeType":"67","messageId":"68","endLine":3,"endColumn":57},{"ruleId":"69","severity":1,"message":"70","line":6,"column":10,"nodeType":"71","messageId":"72","endLine":6,"endColumn":21},{"ruleId":"69","severity":1,"message":"73","line":6,"column":23,"nodeType":"71","messageId":"72","endLine":6,"endColumn":36},{"ruleId":"69","severity":1,"message":"74","line":12,"column":35,"nodeType":"71","messageId":"72","endLine":12,"endColumn":47},{"ruleId":"69","severity":1,"message":"75","line":45,"column":29,"nodeType":"71","messageId":"72","endLine":45,"endColumn":37},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","@typescript-eslint/no-unused-vars","'ThunkAction' is defined but never used.","Identifier","unusedVar","'ThunkDispatch' is defined but never used.","'props' is defined but never used.","'getState' is defined but never used."]