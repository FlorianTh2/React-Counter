[{"C:\\Users\\Florian\\Desktop\\github\\React-Counter\\src\\index.tsx":"1","C:\\Users\\Florian\\Desktop\\github\\React-Counter\\src\\reportWebVitals.ts":"2","C:\\Users\\Florian\\Desktop\\github\\React-Counter\\src\\app\\store\\store.tsx":"3","C:\\Users\\Florian\\Desktop\\github\\React-Counter\\src\\app\\app.tsx":"4","C:\\Users\\Florian\\Desktop\\github\\React-Counter\\src\\app\\project\\project.tsx":"5","C:\\Users\\Florian\\Desktop\\github\\React-Counter\\src\\app\\home\\home.tsx":"6","C:\\Users\\Florian\\Desktop\\github\\React-Counter\\src\\app\\project\\project-list.tsx":"7","C:\\Users\\Florian\\Desktop\\github\\React-Counter\\src\\app\\home\\store\\reducers\\counterReducer.tsx":"8","C:\\Users\\Florian\\Desktop\\github\\React-Counter\\src\\app\\shared\\navbar\\customNavbar.tsx":"9","C:\\Users\\Florian\\Desktop\\github\\React-Counter\\src\\app\\home\\counter\\counter.tsx":"10","C:\\Users\\Florian\\Desktop\\github\\React-Counter\\src\\app\\home\\store\\actions\\index.tsx":"11","C:\\Users\\Florian\\Desktop\\github\\React-Counter\\src\\app\\home\\store\\actionTypes\\index.tsx":"12","C:\\Users\\Florian\\Desktop\\github\\React-Counter\\src\\app\\home\\store\\actionCreators\\index.tsx":"13"},{"size":1272,"mtime":1610031052873,"results":"14","hashOfConfig":"15"},{"size":467,"mtime":1610029017476,"results":"16","hashOfConfig":"15"},{"size":564,"mtime":1610028852954,"results":"17","hashOfConfig":"15"},{"size":887,"mtime":1610028852953,"results":"18","hashOfConfig":"15"},{"size":121,"mtime":1610028852953,"results":"19","hashOfConfig":"15"},{"size":245,"mtime":1610028852953,"results":"20","hashOfConfig":"15"},{"size":132,"mtime":1610028852954,"results":"21","hashOfConfig":"15"},{"size":719,"mtime":1610030492335,"results":"22","hashOfConfig":"15"},{"size":728,"mtime":1610028852953,"results":"23","hashOfConfig":"15"},{"size":1202,"mtime":1610031626875,"results":"24","hashOfConfig":"15"},{"size":225,"mtime":1610028852953,"results":"25","hashOfConfig":"15"},{"size":335,"mtime":1610030482130,"results":"26","hashOfConfig":"15"},{"size":2439,"mtime":1610030353257,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vxzf42",{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"33"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"33"},"C:\\Users\\Florian\\Desktop\\github\\React-Counter\\src\\index.tsx",[],"C:\\Users\\Florian\\Desktop\\github\\React-Counter\\src\\reportWebVitals.ts",["59"],"import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n",[],"C:\\Users\\Florian\\Desktop\\github\\React-Counter\\src\\app\\store\\store.tsx",[],"C:\\Users\\Florian\\Desktop\\github\\React-Counter\\src\\app\\app.tsx",[],"C:\\Users\\Florian\\Desktop\\github\\React-Counter\\src\\app\\project\\project.tsx",[],"C:\\Users\\Florian\\Desktop\\github\\React-Counter\\src\\app\\home\\home.tsx",[],"C:\\Users\\Florian\\Desktop\\github\\React-Counter\\src\\app\\project\\project-list.tsx",[],"C:\\Users\\Florian\\Desktop\\github\\React-Counter\\src\\app\\home\\store\\reducers\\counterReducer.tsx",[],"C:\\Users\\Florian\\Desktop\\github\\React-Counter\\src\\app\\shared\\navbar\\customNavbar.tsx",["60","61","62","63"],"import React from 'react';\nimport './customNavbar.scss';\nimport { Button, Form, FormControl, Nav, Navbar, NavDropdown } from 'react-bootstrap';\n\nconst CustomNavbar: React.FC = () => {\n    return (\n        <Navbar bg=\"light\">\n            <Navbar.Brand className=\"navbar-brand\" href=\"home\">\n                Home\n            </Navbar.Brand>\n            <Nav className=\"navbar-items mr-auto\">\n                <Nav.Link href=\"projects\">Projects</Nav.Link>\n            </Nav>\n            <Nav className=\"navbar-items\">\n                <Nav.Link href=\"impressum\">Impressum</Nav.Link>\n                <Nav.Link href=\"privacy\">Datenschutzerkl√§rung</Nav.Link>\n            </Nav>\n        </Navbar>\n    );\n};\n\nexport default CustomNavbar;\n","C:\\Users\\Florian\\Desktop\\github\\React-Counter\\src\\app\\home\\counter\\counter.tsx",["64","65","66"],"C:\\Users\\Florian\\Desktop\\github\\React-Counter\\src\\app\\home\\store\\actions\\index.tsx",[],"C:\\Users\\Florian\\Desktop\\github\\React-Counter\\src\\app\\home\\store\\actionTypes\\index.tsx",[],[],"C:\\Users\\Florian\\Desktop\\github\\React-Counter\\src\\app\\home\\store\\actionCreators\\index.tsx",["67","68"],"import * as constants from '../actions';\nimport { ThunkAction } from 'redux-thunk';\nimport { RootState } from '../../../store/store';\nimport { CounterActionTypes } from '../actionTypes';\n\n// without thunk, used by thunk\n// returns only 1 object\n// with this you can call in view (if you dont want to use thunk):\n// function onIncrementCounter(): Actions {\n//     return dispatch(increment());\n// }\n//\n// directly call actions\n// dont use action-creators (redux thunk)\n// synchronously\n// in onClick: incrementAsync\nexport function incrementConterActionCreator(): CounterActionTypes {\n    return {\n        type: constants.INCREMENT_COUNTER,\n        payload: 1,\n    };\n}\n\nexport function decrementConterActionCreator(): CounterActionTypes {\n    return {\n        type: constants.DECREMENT_COUNTER,\n        payload: 1,\n    };\n}\n\ntype ThunkResult<R> = ThunkAction<R, RootState, undefined, CounterActionTypes>;\n\n// redux-Thunk action-creator\n// so it returns no action (aka single object) but a function which returns this action (object)\n// \"Redux Thunk middleware allows you to write action creators that return a function instead of an action.\"\n// in onClick: () => dispatch(incrementAsync())\n// how does thunk now if it being used or not (maybe used dispatch directly...)\n//  - similar question: What is the main difference to \"non-thunk\"\n//  - = example without thunk:  handleIncrementClick: () => dispatch({ type: 'INCREMENT' })\n//  -   example with thunk:     handleIncrementClick: () => dispatch(innerDispatch => innerDispatch({ type: 'INCREMENT' }))\n//      - main-difference: dispatch does not get/return a plain object but a function\nexport function incrementConterActionCreatorAsync(): ThunkResult<void> {\n    // https://stackoverflow.com/questions/52977666/correct-typescript-type-for-thunk-dispatch\n    return async (dispatch, getState) => {\n        // const state = getState();\n        // console.log(state.CounterState.Counter);\n        // example async call: axios.get(`https://reqres.in/api/users`)\n        //\n        // dispatch(addTodoStarted());\n        setTimeout(() => {\n            dispatch(incrementConterActionCreator());\n        }, 0);\n        // .then(res=> {dispatch(addTodoSuccess)})\n    };\n}\n\nexport function decrementConterActionCreatorAsync(): ThunkResult<void> {\n    return async (dispatch, getState) => {\n        setTimeout(() => {\n            dispatch(decrementConterActionCreator());\n        }, 0);\n    };\n}\n",{"ruleId":"69","severity":1,"message":"70","line":3,"column":25,"nodeType":"71","messageId":"72","endLine":3,"endColumn":57},{"ruleId":"73","severity":1,"message":"74","line":3,"column":10,"nodeType":"75","messageId":"76","endLine":3,"endColumn":16},{"ruleId":"73","severity":1,"message":"77","line":3,"column":18,"nodeType":"75","messageId":"76","endLine":3,"endColumn":22},{"ruleId":"73","severity":1,"message":"78","line":3,"column":24,"nodeType":"75","messageId":"76","endLine":3,"endColumn":35},{"ruleId":"73","severity":1,"message":"79","line":3,"column":50,"nodeType":"75","messageId":"76","endLine":3,"endColumn":61},{"ruleId":"73","severity":1,"message":"80","line":6,"column":10,"nodeType":"75","messageId":"76","endLine":6,"endColumn":21},{"ruleId":"73","severity":1,"message":"81","line":6,"column":23,"nodeType":"75","messageId":"76","endLine":6,"endColumn":36},{"ruleId":"73","severity":1,"message":"82","line":12,"column":35,"nodeType":"75","messageId":"76","endLine":12,"endColumn":47},{"ruleId":"73","severity":1,"message":"83","line":44,"column":29,"nodeType":"75","messageId":"76","endLine":44,"endColumn":37},{"ruleId":"73","severity":1,"message":"83","line":58,"column":29,"nodeType":"75","messageId":"76","endLine":58,"endColumn":37},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","@typescript-eslint/no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'FormControl' is defined but never used.","'NavDropdown' is defined but never used.","'ThunkAction' is defined but never used.","'ThunkDispatch' is defined but never used.","'props' is defined but never used.","'getState' is defined but never used."]